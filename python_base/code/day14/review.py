"""
    面向对象三大特征:
        封装:
            语法:
                数据:一个类包装多个变量.
                行为:隐藏细节,注意必要.
            设计:分
        继承:
            语法:子类拥有父类成员
            设计:隔
        多态:
            语法:重写(子覆盖父)
            做法:重写 + 创建子类对象 --> 调用父执行子(目标)
            设计:干

                def 函数(爸爸):
                    爸爸.功能()

                函数(儿子())
    类与类关系:
        泛化(继承)/组合(实例变量)/依赖(参数)

    面向对象设计原则:
        开闭原则:允许增,不能改.
        单一职责:一个变化点
        依赖倒置:调用父,而不调用子.
        组合复用:通过变量(参数/实例变量)调用,而不是通过继承调用.
        里氏替换:扩展重写
        迪米特法则:低耦合
"""