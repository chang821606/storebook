"""
    复习
        类和对象
            语法
                class 类名:
                    def __init__(self,参数):
                        #数据(变量)
                        self.数据 = 参数

                    # 行为(方法)
                    def 方法名称(self):
                        self.数据

                变量 = 类名(参数)   # 自动调用init方法
                变量.成员

            实例成员:对象自己的成员(数据/行为)
            类成员:大家共享的成员

        封装
            数据: 将多个变量包装为一个对象.
                优势:
                     代码可读性相比容器更高.
                     符合人类的思考方式.(数据+对数据的操作)
                例如:
                    技能(名字/攻击比例/持续时间...)
                    老婆(名字/身高/体重...)

            行为:向类外提供必要的功能,屏蔽/隐藏实现的细节.
                优势:简化编程(拿来主义)
                例如:str类(转换大小写/查找字符的位置/替换...)

                私有化:  __名称  -->  _类名__名称
                属性:拦截 对变量的操作,转移到读写方法中.
                    保护变量
"""
class Wife:
    def __init__(self):
        self.__a = 100

w01 = Wife()
# print(w01.__a)
print(w01.__dict__)# _Wife__
print(w01._Wife__a)# 实际也可以访问私有成员,但是不要这么做.













